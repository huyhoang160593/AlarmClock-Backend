{"version":3,"sources":["components/AlarmForm.js","services/alarms.js","components/AlarmManagerScreen.js","components/MessageScreen.js","App.js","index.js"],"names":["AlarmForm","createAlarm","modifyAlarm","useState","id","setID","time","setTime","message","setMessage","code","setCode","timeToExpire","setTimeToExpire","useEffect","className","onSubmit","event","timeString","split","preventDefault","hours","minutes","htmlFor","type","value","name","onChange","target","placeholder","disabled","required","maxLength","minLength","min","onClick","baseUrl","getAll","axios","get","then","response","data","create","newObject","a","post","update","currentObject","put","remove","delete","getSDMessage","AlarmManagerScreen","alarms","setAlarms","setModifyAlarm","AlarmService","alarmObject","find","alarm","alert","returnAlarm","map","concat","console","log","_","filter","MessageScreen","props","setAlarm","match","params","alarmService","setTimeout","window","location","replace","origin","catch","App","history","useHistory","keyword","setKeyword","length","push","path","component","exact","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04d7cd9d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst AlarmForm = ({ createAlarm, modifyAlarm }) =>{\r\n    const [id, setID] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [timeToExpire, setTimeToExpire ] = useState(15)\r\n\r\n    useEffect(() => {\r\n        setID(modifyAlarm.id || '')\r\n        setMessage(modifyAlarm.message || '')\r\n        setCode(modifyAlarm.code || '')\r\n    }, [modifyAlarm])\r\n\r\n    const addAlarm = (event) => {\r\n        const timeString = time.split(\":\")\r\n        event.preventDefault()\r\n        id === '' \r\n            ? createAlarm({\r\n                hours: timeString[0],\r\n                minutes: timeString[1],\r\n                message: message,\r\n                timeToExpire: timeToExpire,\r\n                code: code \r\n        }) \r\n            : createAlarm({\r\n                id: id,\r\n                hours: timeString[0],\r\n                minutes: timeString[1],\r\n                message: message,\r\n                timeToExpire: timeToExpire,\r\n                code: code \r\n            })\r\n        setTime('')\r\n        setMessage('')\r\n        setCode('')\r\n        setTimeToExpire(15)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setID('')\r\n        setTime('')\r\n        setMessage('')\r\n        setCode('')\r\n        setTimeToExpire(15)\r\n    }\r\n    return(\r\n        <div>\r\n            <form className='alarm-form' onSubmit={addAlarm}>\r\n                <fieldset>\r\n                    <legend>Form tạo/sửa báo thức</legend>\r\n                    <div>\r\n                        <label htmlFor=\"id-alarm\">ID</label>  \r\n                        <input \r\n                            id=\"id-alarm\" \r\n                            type=\"text\" \r\n                            value={id} \r\n                            name=\"ID\" \r\n                            onChange={({ target }) => setID(target.value)} \r\n                            placeholder=\"Không có id tức là tạo mới...\"\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"time\">Giờ báo thức</label>      \r\n                        <input\r\n                            id=\"time\"\r\n                            type=\"time\"\r\n                            value={time}\r\n                            name=\"Time\"\r\n                            onChange={({ target }) => setTime(target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"message\">Tin nhắn</label>\r\n                        <textarea\r\n                            id=\"message\"\r\n                            type=\"text\"\r\n                            value={message}\r\n                            name=\"Message\"\r\n                            maxLength=\"200\"\r\n                            onChange={({ target }) => setMessage(target.value)}\r\n                            placeholder=\"Nhập không quá 200 kí tự...\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"code\">Code</label>\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            value={code}\r\n                            name=\"Code\"\r\n                            minLength=\"4\" \r\n                            maxLength=\"4\"\r\n                            onChange={({ target }) => setCode(target.value)}\r\n                            required\r\n                        />\r\n                        <span className=\"rules\">*Yêu cầu code bắt buộc 4 kí tự bất kì</span>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"timetoexpire\">Thời gian tự hủy</label>\r\n                        <div>\r\n                            <input\r\n                                id=\"timetoexpire\"\r\n                                type=\"number\"\r\n                                value={timeToExpire}\r\n                                name=\"TimeToExpire\"\r\n                                min=\"15\"\r\n                                onChange={({ target }) => setTimeToExpire(target.value)}\r\n                                required\r\n                            /> giây\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"select-choice\">\r\n                        <button id=\"create-button\" type=\"submit\" className=\"btn-pill\"><span>Đặt/Sửa báo thức</span></button>\r\n                        <button onClick={handleCancel} className=\"btn-shine\"><span>Hủy bỏ thay đổi</span></button>\r\n                    </div>\r\n                </fieldset>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlarmForm","import axios from 'axios'\r\nconst baseUrl = '/api/alarmMessages'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n    const response = await axios.post(baseUrl,newObject)\r\n    return response.data\r\n}\r\n\r\nconst update = async ( id , currentObject) => {\r\n    const response = await axios.put(`${baseUrl}/${id}`, currentObject)\r\n    return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n    await axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst getSDMessage = async (code) => {\r\n    const response = await axios.get(`${baseUrl}/code/${code}`)\r\n    return response.data\r\n}\r\n// eslint-disable-next-line\r\nexport default { getAll, create, update, remove, getSDMessage }","import React, { useState, useEffect } from 'react'\r\nimport AlarmForm from './AlarmForm'\r\nimport AlarmService from '../services/alarms'\r\n\r\nconst AlarmManagerScreen = () =>{\r\n    const [alarms, setAlarms] = useState([])\r\n    const [modifyAlarm, setModifyAlarm] = useState({})\r\n\r\n    const addAlarm = (alarmObject) => {\r\n        const sameCodeAlarm = alarms.find(alarm => alarmObject.code === alarm.code)\r\n        if(!sameCodeAlarm){\r\n            !alarmObject.id \r\n        ?   AlarmService.create(alarmObject)\r\n            .then( returnAlarm => {\r\n                setAlarms(alarms.concat(returnAlarm))\r\n            })\r\n        :   AlarmService.update(alarmObject.id, alarmObject)\r\n                .then( returnAlarm => {\r\n                    setAlarms(alarms.map(alarm => {\r\n                        return alarm.id === returnAlarm.id ? returnAlarm : alarm\r\n                    }\r\n                        ))\r\n                })\r\n        } else {\r\n            alert(\"Đoạn code này đã bị trùng, mời bạn nhập lại code khác !\")\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    useEffect(() =>{\r\n        AlarmService.getAll().then(alarms=>setAlarms(alarms))\r\n    },[])\r\n\r\n    const handleModify = (alarmObject) =>{\r\n        setModifyAlarm(alarmObject)\r\n    }\r\n\r\n    const handleDelete = (id) =>{\r\n        AlarmService.remove(id)\r\n            .then( _ =>{\r\n                setAlarms(alarms.filter(alarm => alarm.id !== id))\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"alarm-manager\">\r\n            <h1 id=\"manager-title\">Alarm Manager <span>version 0.0.1</span></h1>\r\n            <div className=\"add-alarm\">\r\n                <AlarmForm createAlarm = {addAlarm} modifyAlarm={modifyAlarm}/>\r\n            </div>\r\n            <div className=\"alarm-table\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Thời gian</th>\r\n                            <th>Code</th>\r\n                            <th>Tin nhắn</th>\r\n                            <th>Thời gian tồn tại(s)</th>\r\n                            <th>Hành động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            alarms.map(alarm=>{\r\n                                console.log(alarm)\r\n                                return(\r\n                                    <tr key={alarm.id}>\r\n                                        <td>{alarm.id}</td>\r\n                                        <td>{alarm.hours}:{alarm.minutes}</td>\r\n                                        <td>{alarm.code}</td>\r\n                                        <td>{alarm.message}</td>\r\n                                        <td>{alarm.timeToExpire}</td>\r\n                                        <td>\r\n                                            <button className=\"action-button btn-pill\" onClick={() => handleModify(alarm)}>Chỉnh sửa</button>\r\n                                            <button className=\"action-button btn-shine\" onClick={() => handleDelete(alarm.id)}>Xóa</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )                               \r\n                            })                               \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlarmManagerScreen","import React,{ useState,useEffect } from 'react'\r\nimport alarmService from '../services/alarms'\r\n\r\nconst MessageScreen = (props) =>{\r\n    const [alarm, setAlarm] = useState({})\r\n\r\n    const code = props.match.params.code\r\n    useEffect(() => {\r\n        alarmService.getSDMessage(code)\r\n            .then(\r\n                alarm=>{\r\n                    setAlarm(alarm)\r\n                    setTimeout(()=> window.location.replace(window.location.origin),alarm.timeToExpire*1000)\r\n                })\r\n            .catch(()=> window.location.replace(window.location.origin))\r\n    }, [code])\r\n\r\n    return(\r\n        !alarm\r\n        ? <div>Loading...</div> \r\n        : \r\n        <div className=\"sd-message\">\r\n            <h3>Tin nhắn bạn nhân được là</h3>\r\n            <p id=\"message-content\">\"{alarm.message}\"</p>\r\n            <p id=\"time-to-expire\">Tin nhắn sẽ tự hủy sau <span>{alarm.timeToExpire}</span> giây nữa</p>\r\n        </div>\r\n    )        \r\n}\r\n\r\nexport default MessageScreen","import React, { useState } from 'react'\nimport {Route, useHistory} from 'react-router-dom'\nimport './App.css'\nimport AlarmManagerScreen from './components/AlarmManagerScreen'\nimport MessageScreen from './components/MessageScreen'\n\n\nfunction App() {\n  const history = useHistory()\n  const [keyword, setKeyword] = useState('')\n  const handleClick = (event) => {\n    event.preventDefault()\n    if(keyword.length === 4){\n      history.push(`/message/${keyword}`)\n    } else if(keyword=== \"luonvuituoi\" ){\n      history.push(\"/qgql27cqKE4gHkMDYsob\")\n    } else {\n      window.alert(\"Your opinion has been send\")\n      history.push(\"/\")\n    }\n\n  }\n  return (\n      <div className=\"App grid-container\">\n        <header className=\"App-header\">\n          <h1 className=\"line-1 anim-typewriter\">Share your anonymous thought for everyone to see...</h1>\n        </header>\n        <main className=\"main\">\n          <form onSubmit={handleClick} className=\"keyword-bar\">\n            <input \n              type=\"text\" \n              name=\"keyword-input\" \n              id=\"keyword-input\" \n              onChange= {({ target }) => setKeyword(target.value)}\n              placeholder=\"Giàu vì bạn, sang vì vợ...\"\n            />\n            <button type=\"submit\"> Send </button>\n          </form>\n          <section className=\"content\">\n            <Route path=\"/message/:code\" component={MessageScreen} />\n            <Route path=\"/qgql27cqKE4gHkMDYsob\" exact={true} component={AlarmManagerScreen} />\n          </section>\n        </main>\n        <footer className=\"footer\">\n          <span>Follow me in </span>\n          <a href=\"https://www.facebook.com/CH2VOV/\">\n            <i className=\"fab fa-facebook\"></i>\n          </a>\n          <a href=\"https://github.com/iulover99\">\n            <i className=\"fab fa-github-alt\"></i>\n          </a>\n          <a href=\"https://www.instagram.com/hoang_uaena_0223/\">\n            <i className=\"fab fa-instagram\"></i>\n          </a>\n        </footer>\n      </div> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}